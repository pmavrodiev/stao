[global]
cache_enabled = True
cache_input_data = True
single_store =


[parallel]
cpu_count = 100
chunk_size = 50

[parameters]

alpha = 0.5
beta = -2.0

# When False calculate and output the predicted Umsatz
# using the supplied parameters
# When True do gradient descent
calibrate = False

# time steps for the gradient descent algorithm
# only valid if calibrate = True
T = 1000

# when the mean error over some time is smaller than the convergence critera, stop
# of course the convergence threshold depends on the error function we use
# only valid if calibrate = True
delta_convergence = 0.005

[parameter_sweep]

# if uncommented overrides [parameters]
alpha_array = [0.1, 0.2, 0.3, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4]
beta_array = [-8, -7, -6, -5, -4, -3, -2, -1]

[inputdata]

stores_cm = /userdata/pmavrodi/Projekte/Stao/input/stores_sm_cleaned.csv
drivetimes = /userdata/pmavrodi/Projekte/Stao/input/drivetimes_sm.csv
haushalt = /userdata/pmavrodi/Projekte/Stao/input/STATPOP2014_HH_full.csv
referenz_ergebnisse = /userdata/pmavrodi/Projekte/Stao/input/Referenzen_Resultate.csv

[cache_config]

cache_dir = /userdata/pmavrodi/Projekte/Stao/src/cache
stores_cm_cached = stores_sm.pkl
stores_cm_migros_only_cached = stores_sm_migros.pkl
drivetimes_cached = drivetimes.pkl
haushalt_cached = haushalt.pkl

[output]
output_csv = /userdata/pmavrodi/Projekte/Stao/output/model_huff/umsatz_potential_pd.txt
