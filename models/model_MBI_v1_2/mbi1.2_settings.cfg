[global]

# =================================================================
# Read an intermediary table with all data sources flattened
# Format of the table is
#
# Index(['HARasterID', 'StoreID', 'StoreName', 'Retailer', 'Format', 'VFL',
#        'Adresse', 'PLZ', 'Ort', 'lon', 'lat', 'E_LV03', 'N_LV03',
#        'ProfitKSTID', 'KostenstelleID', 'JahrID', 'Food', 'Frische',
#        'Near/Non Food', 'Fachmaerkte', 'Oeffnungsdatum', 'StartHARasterID',
#        'AutoDistanzKilometer', 'AutoDistanzMinuten', 'FZ',
#        'Tot_Haushaltausgaben', 'AnzahlHH', 'RegionTyp', 'DTB', 'ANTOT'],
#       dtype='object')
#
# Read the cache if True, else recompute it
# =================================================================

cache_intermediary = True

# =================================================================
# Enter the name of the store for invividual analysis AA MM Wettingen
# Leave emty to analyze all stores OS M Kronb√ºhl
# =================================================================

single_store =

# =================================================================
# Given the starting values of the parameters in the
# [parameters] section minimize the total prediction error.
# Currently the 'nelder-mead' method from scipy.optimize.minimize
# is used
# =================================================================
optimize = False

# =================================================================
# If debug is True, print detailed LMA statistics about
# the stores and hectars defined in the [debug] section.
# Note, if optimize is True, debug is always False
# =================================================================
debug = False

# =================================================================
# Enable parallization (True/False).
# Refer to the source code for the parallelized blocks.
# =================================================================
parallelize = False

[parallel]
cpu_count = [20]
chunk_size = [1000]

# =================================================================
# make sure to enable/disable debug and parallelize here
# before changing the respective [debug] and [parallel] sections
#
# store_ids - a list with StoreIDs for which detailed LMA statistics
#             are to be printed. Specify "all" (in quotes) to
#             output statistics for all Migros stores
# ha_reasterids - a list with HARasterIDs for which detailed LMA statistics
#             are to be printed.
# =================================================================
[debug]

# store_ids = [708, 562, 1023]
store_ids = [114, 2002]
ha_rasterids = [67562547]



# =================================================================
# Prune the stores reachable from a given hectare. From each
# hectare only the closest 'number_nearest_stores' stores will be retained.
# If the indermediary cached is used (cache_intermediary=True) this step will
# omitted
# =================================================================
[pruning]
number_nearest_stores = 15

[parameters]
# Define model parameters here. Each parameter is a list. 
# A list with several elements will cause a parameter sweep 
# over that parameter.

# ------------------------
# --- Basic Parameters ---
# ------------------------


# --- LAT: Ladenattraktivitaet
# LAT = VFL^factor_LAT
# 1.30680363
factor_LAT = [1.26362146]

# --- RLAT: relative Ladenattraktivitaet
# hh_halbzeit: Defines when the LAT is halved. Valid for Haushalte (hh)
# hh_halbzeit is measured in minutes travelled by car
# 2.34970198
hh_halbzeit = [4.96035841]

#
# hh_halbzeit_factor_smvm: extra factor by which the hh_halbzeit for
# SM/VM 700 und SM/VM 2000 is multiplied

# hh_halbzeit_factor_smvm is also measured in minutes travelled by car
# 1.25878266

hh_halbzeit_factor_smvm = [1.50742598]

# --- oeV parameters ---
# beta_ov

# ov_halbzeit: Defines the halving of the probability of a commuter
# to visit a certain store, depending on the distance from the station to the store

# ov_halbzeit is measured in meters
# 14.6414833
ov_halbzeit = [14.0131926]

#  83.69406981
ausgaben_pendler = [109.605342]

# --- STATENT Parameters ---
# statent_halb_zeit is measured in kilometers travelled by car
# 0.79127049
statent_halb_zeit = [0.616986604]

# statent_halbzeit_factor_smvm: additional factor by which the statent_halb_zeit
# for SM/VM 700 and SM/VM 2000 stores is multiplied
# 0.65525036
statent_halbzeit_factor_smvm = [0.5]

#  182.12440709
ausgaben_arbeitnehmer = [161.361852]


# R-style specification of the regression formula.
# The formula will be fed to statsmodels.formula.api regression methods
# Make sure that all fields specified in the formula are present as column names in the underlying data table
# Note: The formula must not be enclosed in quotes !!!
# formula = istUmsatz~Umsatz_Haushalte+Umsatz_Pendler+Umsatz_Arbeitnehmer+Umsatz_Pendler+DTB+C(RegionTyp)+VFL+C(Format)
[regression]



[inputdata]
# format: (filename, cache_type)
# cache_type = False is non-permanent cache
# cache_type = True is permanent cache

migros_stores = ( '/userdata/pmavrodi/Projekte/Stao/input/Filialinfo_Migros.csv', False)
konkurrenten_stores = ( '/userdata/pmavrodi/Projekte/Stao/input/Filialinfo_Konkurrenten.csv', False)

drivetimes = ( '/userdata/pmavrodi/Projekte/Stao/input/Fahrzeiten_20170814.csv', True )
haushalt = ( '/userdata/pmavrodi/Projekte/Stao/input/HHA_HR_20170713.csv', True )
stations = ( '/userdata/pmavrodi/Projekte/Stao/input/SBB_Passagierfrequenzen.csv', True )
regionstypen = ( '/userdata/pmavrodi/Projekte/Stao/input/Geo_Hierarchie.csv', True )
arbeitnehmer = ( '/userdata/pmavrodi/Projekte/Stao/input/Arbeitnehmer.csv', True )

[cache_config]
cache_dir = /userdata/pmavrodi/Projekte/Stao/src/cache/model_mbi_1_2
intermediary_cache = enriched_with_pruning_15.pkl
# intermediary_cache = enriched_no_pruning_with_neighbour_info.pkl
migros_stores_cache = migros_stores.pkl
konkurrenten_stores_cache = konkurrenten_stores.pkl
drivetimes_cached = drivetimes.pkl
haushalt_cached = haushalt.pkl
stations_cached = ov_stations.pkl
regionstypen_cached = regionstypen.pkl
arbeitnehmer_cached = arbeitnehmer.pkl


[output]
output_csv = /userdata/pmavrodi/Projekte/Stao/output/model_mbi_1_2/2017-11-08/umsatz_potential_pd
